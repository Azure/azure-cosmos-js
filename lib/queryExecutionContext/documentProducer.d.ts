import { SqlQuerySpec } from ".";
import { DocumentClient } from "../documentclient";
import { Response } from "../request";
import { FetchResult } from "./FetchResult";
export declare class DocumentProducer {
    private static readonly STATES;
    private documentclient;
    private collectionLink;
    private query;
    targetPartitionKeyRange: any;
    fetchResults: FetchResult[];
    private state;
    allFetched: boolean;
    private err;
    previousContinuationToken: string;
    continuationToken: string;
    private respHeaders;
    private internalExecutionContext;
    constructor(documentclient: DocumentClient, collectionLink: string, query: SqlQuerySpec, targetPartitionKeyRange: any, options: any);
    peekBufferedItems(): any[];
    hasMoreResults(): boolean;
    gotSplit(): boolean;
    private _getAndResetActiveResponseHeaders();
    private _updateStates(err, allFetched);
    private static _needPartitionKeyRangeCacheRefresh(error);
    bufferMore(): Promise<Response<any>>;
    getTargetParitionKeyRange(): any;
    nextItem(): Promise<Response<any>>;
    current(): Promise<Response<any>>;
}

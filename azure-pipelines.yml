# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

jobs:
  - job: Emulator
    pool:
      vmImage: windows-2019
    steps:
      - powershell: |
          $localEtag = Get-Content "$env:ProgramFiles\Azure Cosmos DB Emulator\etag.txt"
          $headResponse = Invoke-WebRequest 'https://aka.ms/cosmosdb-emulator' -Method 'HEAD'
          $remoteEtag = $response.headers.Etag
          if($localEtag -ne $remoteEtag){
            Write-Host "Emulator is out of date"
            Write-Host "Downloading Cosmos Emulator"
            wget "https://aka.ms/cosmosdb-emulator" -outfile "$env:temp\azure-cosmosdb-emulator.msi"
            Write-Host "Finished Downloading Cosmos Emulator - $env:temp\azure-cosmosdb-emulator.msi"
            dir "$env:temp"
            echo "Deleting Azure Cosmos DB Emulator directory"
            dir "$env:ProgramFiles\"
            rmdir /Q /S "$env:ProgramFiles\Azure Cosmos DB Emulator"
            echo "Directory after deleting"
            dir "$env:ProgramFiles\"
            choco install lessmsi
            choco upgrade lessmsi
            echo "Checking directory" 
            dir "$env:ProgramFiles"
            mkdir "$env:ProgramFiles\Azure Cosmos DB Emulator"
            lessmsi x "$env:ProgramFiles\azure-cosmosdb-emulator.msi" "$env:ProgramFiles\Azure Cosmos DB Emulator\"
            Set-Content -Path "$env:ProgramFiles\Azure Cosmos DB Emulator\etag.txt" -Value $remoteEtag
          } else {
            Write-Host "Emulator is already up to date"
          }

          Write-Host "Starting Comsos DB Emulator"
          Start-Process "$env:Temp\Azure Cosmos DB Emulator\SourceDir\Azure Cosmos DB Emulator\CosmosDB.Emulator.exe" "/NoExplorer /NoUI" -Verb RunAs
        displayName: "Refresh and Run Public Cosmos DB Emulator"
      - task: NodeTool@0
        inputs:
          versionSpec: "8.x"
        displayName: "Install Node.js"

      - script: npm install
        displayName: "npm install"

      - script: npm run build
        displayName: "npm run build"

      - bash: ACCOUNT_HOST=$COSMOSDBEMULATOR_ENDPOINT NODE_TLS_REJECT_UNAUTHORIZED="0" npm run test
        failOnStderr: true
        displayName: "npm test"
        env:
          MOCHA_TIMEOUT: 100000
  # - job: NightlyEmulator
  #   pool:
  #     vmImage: vs2017-win2016
  #   steps:
  #     - task: azure-cosmosdb.emulator-internal-preview.run-cosmosdbemulatorcontainer.CosmosDbEmulator@2
  #       displayName: "Run Azure Cosmos DB Emulator container"
  #       inputs:
  #         username: "$(cosmosdb.azurecr.io.Username)"
  #         password: "$(cosmosdb.azurecr.io.Password)"
  #         defaultPartitionCount: 25
  #     - task: NodeTool@0
  #       inputs:
  #         versionSpec: "8.x"
  #       displayName: "Install Node.js"

  #     - script: npm install
  #       displayName: "npm install"

  #     - script: npm run build
  #       displayName: "npm run build"

  #     - bash: ACCOUNT_HOST=$COSMOSDBEMULATOR_ENDPOINT NODE_TLS_REJECT_UNAUTHORIZED="0" npm run test
  #       failOnStderr: true
  #       continueOnError: true
  #       displayName: "npm test"
  #       env:
  #         MOCHA_TIMEOUT: 100000
